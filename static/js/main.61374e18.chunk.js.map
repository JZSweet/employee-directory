{"version":3,"sources":["components/API.js","components/Card.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["hardEmpy","EmployeeCard","picture","name","dob","phone","email","Card","style","width","border","Body","Img","src","thumbnail","alt","Title","first","last","Text","age","API","useState","setTitle","employees","setEmployees","useEffect","fetch","then","res","json","results","fliterEmpolyee","title","newEmpolyees","filter","currentEmpy","toLowerCase","includes","console","log","Container","InputGroup","className","FormControl","placeholder","aria-label","aria-describedby","onChange","event","target","value","Append","Button","onClick","variant","sort","a","b","CardColumns","map","i","Header","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAGIA,EAAW,GA+DTC,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,MAA9B,OACjB,cAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAWC,OAAO,OAAxC,SACI,eAACH,EAAA,EAAKI,KAAN,WACI,cAACJ,EAAA,EAAKK,IAAN,CAAUC,IAAKX,EAAQY,UAAWC,IAAI,aACtC,eAACR,EAAA,EAAKS,MAAN,qBAAoBb,EAAKc,MAAzB,IAAiCd,EAAKe,KAAtC,OACA,eAACX,EAAA,EAAKY,KAAN,oBAAkBf,EAAIgB,IAAtB,OACA,eAACb,EAAA,EAAKY,KAAN,sBAAoBd,EAApB,OACA,eAACE,EAAA,EAAKY,KAAN,sBAAoBb,EAApB,aAKGe,EAzEH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACAC,GADA,aAEoBD,mBAAS,IAF7B,mBAEPE,EAFO,KAEIC,EAFJ,KAGdC,qBAAU,WACNC,MAAM,iDACDC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GACHJ,EAAaI,EAAIE,SACjB/B,EAAW6B,EAAIE,aAExB,IAEH,IAAMC,EAAiB,SAACC,GACpB,IAAIC,EAAY,YAAOlC,GACvBkC,EAAeA,EAAaC,QACxB,SAAUC,GACN,OAAOA,EAAYjC,KAAKc,MAAMoB,cAAcC,SAASL,EAAMI,kBAGnEZ,EAAaS,GACbK,QAAQC,IAAI,QAASP,IAazB,OACI,eAACQ,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAYC,UAAU,OAAtB,UACI,cAACC,EAAA,EAAD,CAAaC,YAAY,YAAYC,aAAW,YAAYC,mBAAiB,eACzEC,SAAU,SAAAC,GACN1B,EAAS0B,EAAMC,OAAOC,OACtBnB,EAAeiB,EAAMC,OAAOC,UAEpC,cAACT,EAAA,EAAWU,OAAZ,UACI,cAACC,EAAA,EAAD,CAAQC,QAAStB,EAAgBuB,QAAQ,oBAAzC,iDAGR,cAACF,EAAA,EAAD,CAAQC,QAtBK,WACjB,IAAMpB,EAAY,YAAOV,GACzBU,EAAasB,MAAK,SAAUC,EAAGC,GAC3B,OAAID,EAAEtD,KAAKe,KAAOwC,EAAEvD,KAAKe,MAAgB,EACrCuC,EAAEtD,KAAKe,KAAOwC,EAAEvD,KAAKe,KAAe,EACjC,KAEXO,EAAaS,IAeT,0CACA,cAACyB,EAAA,EAAD,UACKnC,EAAUoC,KAAI,WAAuCC,GAAvC,IAAG3D,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,MAA9B,OACX,cAAC,EAAD,CACIJ,QAASA,EACTC,KAAMA,EACNC,IAAKA,EACLC,MAAOA,EACPC,MAAOA,EACPuD,EAAGA,aC/CZrC,MATf,WACE,OACE,8BACE,cAAC,EAAD,OCMSsC,MATf,WACI,OACI,gCACI,0DACA,cAAC,EAAD,Q,MCKGC,MAPf,WACE,OACE,cAAC,EAAD,KCKWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtC,MAAK,YAAkD,IAA/CuC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.61374e18.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Container, InputGroup, FormControl, Button, Card, CardColumns } from \"react-bootstrap\";\r\n\r\nlet hardEmpy = [];\r\n\r\nconst API = () => {\r\n    const [title, setTitle] = useState([])\r\n    const [employees, setEmployees] = useState([]);\r\n    useEffect(() => {\r\n        fetch(\"https://randomuser.me/api/?results=100&nat=us\")\r\n            .then((res) => res.json())\r\n            .then((res) => {\r\n                setEmployees(res.results);\r\n                hardEmpy = res.results\r\n            });\r\n    }, []);\r\n\r\n    const fliterEmpolyee = (title) => {\r\n        let newEmpolyees = [...hardEmpy]\r\n        newEmpolyees = newEmpolyees.filter(\r\n            function (currentEmpy) {\r\n                return currentEmpy.name.first.toLowerCase().includes(title.toLowerCase())\r\n            }\r\n        );\r\n        setEmployees(newEmpolyees);\r\n        console.log(\"click\", title)\r\n    };\r\n\r\n    const sortEmpolyee = () => {\r\n        const newEmpolyees = [...employees]\r\n        newEmpolyees.sort(function (a, b) {\r\n            if (a.name.last < b.name.last) { return -1; }\r\n            if (a.name.last > b.name.last) { return 1; }\r\n            return 0;\r\n        });\r\n        setEmployees(newEmpolyees);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <InputGroup className=\"mb-3\">\r\n                <FormControl placeholder=\"firstname\" aria-label=\"firstname\" aria-describedby=\"basic-addon2\"\r\n                    onChange={event => {\r\n                        setTitle(event.target.value)\r\n                        fliterEmpolyee(event.target.value)\r\n                    }} />\r\n                <InputGroup.Append>\r\n                    <Button onClick={fliterEmpolyee} variant=\"outline-secondary\">Filter Employees By First Name</Button>\r\n                </InputGroup.Append>\r\n            </InputGroup>\r\n            <Button onClick={sortEmpolyee}> Sort Employees By Last Name</Button>\r\n            <CardColumns>\r\n                {employees.map(({ picture, name, dob, phone, email }, i) => (\r\n                    <EmployeeCard\r\n                        picture={picture}\r\n                        name={name}\r\n                        dob={dob}\r\n                        phone={phone}\r\n                        email={email}\r\n                        i={i} />\r\n                ))}\r\n            </CardColumns>\r\n        </Container >\r\n    );\r\n}\r\n\r\nconst EmployeeCard = ({ picture, name, dob, phone, email }) => (\r\n    <Card style={{ width: \"18rem\" }} border=\"info\">\r\n        <Card.Body>\r\n            <Card.Img src={picture.thumbnail} alt=\"employee\" />\r\n            <Card.Title> Name: {name.first} {name.last} </Card.Title>\r\n            <Card.Text> Age: {dob.age} </Card.Text>\r\n            <Card.Text> Phone: {phone} </Card.Text>\r\n            <Card.Text> Email: {email} </Card.Text>\r\n        </Card.Body>\r\n    </Card>\r\n);\r\n\r\nexport default API;","import React from \"react\";\r\nimport API from \"./API\";\r\n\r\nfunction employees() {\r\n  return (\r\n    <div>\r\n      <API/>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default employees;","import React from \"react\"\r\nimport Card from \"./Card\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            <h1>React Employee Directory</h1>\r\n            <Card />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import \"./App.css\";\r\nimport Header from \"./components/Header\"\r\nimport React from \"react\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nfunction App() {\r\n  return (\r\n    <Header />\r\n  );\r\n};\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}